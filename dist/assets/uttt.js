eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"uttt/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.FirebaseAdapter.extend({\n      firebase: new Firebase(\'https://stictactoe.firebaseio.com\')\n    });\n  });//# sourceURL=uttt/adapters/application.js");

;eval("define(\"uttt/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'uttt\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'uttt\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=uttt/app.js");

;eval("define(\"uttt/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: UtttENV.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=uttt/router.js");

;eval("define(\"uttt/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Welcome to Ember.js</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=uttt/templates/application.js");

;eval("define(\"uttt/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'uttt\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=uttt/tests/helpers/resolver.js");

;eval("define(\"uttt/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'uttt/app\')[\'default\'];\n    var Router = require(\'uttt/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=uttt/tests/helpers/start-app.js");

;eval("define(\"uttt/tests/test-helper\", \n  [\"uttt/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=uttt/tests/test-helper.js");

;eval("define(\"uttt/tests/uttt/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - uttt/adapters\');\n    test(\'uttt/adapters/application.js should pass jshint\', function() { \n      ok(false, \'uttt/adapters/application.js should pass jshint.\\nuttt/adapters/application.js: line 1, col 1, \\\'import\\\' is only available in ES6 (use esnext option).\\nuttt/adapters/application.js: line 3, col 1, \\\'export\\\' is only available in ES6 (use esnext option).\\n\\n2 errors\'); \n    });\n  });//# sourceURL=uttt/tests/uttt/adapters/application.jshint.js");

;eval("define(\"uttt/tests/uttt/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - uttt\');\n    test(\'uttt/app.js should pass jshint\', function() { \n      ok(false, \'uttt/app.js should pass jshint.\\nuttt/app.js: line 1, col 1, \\\'import\\\' is only available in ES6 (use esnext option).\\nuttt/app.js: line 2, col 1, \\\'import\\\' is only available in ES6 (use esnext option).\\nuttt/app.js: line 3, col 1, \\\'import\\\' is only available in ES6 (use esnext option).\\nuttt/app.js: line 14, col 1, \\\'export\\\' is only available in ES6 (use esnext option).\\n\\n4 errors\'); \n    });\n  });//# sourceURL=uttt/tests/uttt/app.jshint.js");

;eval("define(\"uttt/tests/uttt/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - uttt\');\n    test(\'uttt/router.js should pass jshint\', function() { \n      ok(false, \'uttt/router.js should pass jshint.\\nuttt/router.js: line 1, col 1, \\\'import\\\' is only available in ES6 (use esnext option).\\nuttt/router.js: line 10, col 1, \\\'export\\\' is only available in ES6 (use esnext option).\\n\\n2 errors\'); \n    });\n  });//# sourceURL=uttt/tests/uttt/router.jshint.js");

;eval("define(\"uttt/tests/uttt/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - uttt/tests/helpers\');\n    test(\'uttt/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'uttt/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=uttt/tests/uttt/tests/helpers/resolver.jshint.js");

;eval("define(\"uttt/tests/uttt/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - uttt/tests/helpers\');\n    test(\'uttt/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'uttt/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=uttt/tests/uttt/tests/helpers/start-app.jshint.js");

;eval("define(\"uttt/tests/uttt/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - uttt/tests\');\n    test(\'uttt/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'uttt/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=uttt/tests/uttt/tests/test-helper.jshint.js");
